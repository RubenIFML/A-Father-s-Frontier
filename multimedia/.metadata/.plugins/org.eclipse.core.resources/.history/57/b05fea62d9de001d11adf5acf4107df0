package ow_elements;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.utils.Array;

import screens.OverWorldScreen;

public class Protagonista extends Element{
    private Array<TextureRegion>[] animationArray;
    private Array<TextureRegion> idleArray;
    private Array<TextureRegion> frenteArray;
    private Array<TextureRegion> espaldaArray;
    private Array<TextureRegion> derechaArray;
    private Array<TextureRegion> izquierdaArray;
    private Animation<TextureRegion> idle;
    private Animation<TextureRegion> frente;
    private Animation<TextureRegion> espalda;
    private Animation<TextureRegion> derecha;
    private Animation<TextureRegion> izquierda;
    public boolean tocoSuelo=false;
    public float numSaltos=2;
    public float saltosQuedan=0;
    public Element pies;

    public Protagonista(float x, float y, Stage s, OverWorldScreen nivel) {
        super(x, y, s);

        animationArray = loadFullAnimation("02-OW/Personajes/personaje.protagonista_ow.png", 4, 7, 0.2f, true);

        idleArray = animationArray[0];
        frenteArray = animationArray[1];
        izquierdaArray = animationArray[2];
        derechaArray = animationArray[3];
        espaldaArray = animationArray[4];

        idle = loadAnimationFromArray(idleArray, 20, false);
        frente = loadAnimationFromArray(frenteArray, 0.15f, true);
        espalda = loadAnimationFromArray(espaldaArray, 0.15f, true);
        derecha = loadAnimationFromArray(derechaArray, 0.15f, true);
        izquierda = loadAnimationFromArray(izquierdaArray, 0.15f, true);
        
        setAnimation(idle);
        this.setPolygon(8, 32, 23, 5, 5);
    }


	@Override
	public void act(float delta) {
		// TODO Auto-generated method stub
		super.act(delta);	
		controles();
		animaciones();
		this.applyPhysics(delta);
	}
	
	private void controles() {
		
		if(Gdx.input.isKeyPressed(Keys.W)) {
			this.velocity.y=150;
		}

		else if(Gdx.input.isKeyPressed(Keys.A)) {
			this.velocity.x=-150;
		}
		else if(Gdx.input.isKeyPressed(Keys.S)) {
			this.velocity.y=-150;
		}
		
		else if(Gdx.input.isKeyPressed(Keys.D)) {
			this.velocity.x=150;
			
		}
		else {
			this.velocity.y=0;
			this.velocity.x=0;
		}
	}
	
	private void animaciones() {
		
		if(this.velocity.y!=0) {
			
			if (this.velocity.y<0) {
				this.setAnimation(frente);
			} else if(this.velocity.y>0) {
				this.setAnimation(espalda);
			}
			
		}else if(this.velocity.x!=0) {
			
			if(this.velocity.x>0) {
				this.setAnimation(derecha);
			} else if(this.velocity.x<0) {
				this.setAnimation(izquierda);
			}
			
		}else {
			this.setAnimation(idle);
		}
		
	}
}
