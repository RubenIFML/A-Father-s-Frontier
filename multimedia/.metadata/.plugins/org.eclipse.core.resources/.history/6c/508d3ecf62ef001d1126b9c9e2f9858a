package ow_elements;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.Image;

import game.Parametros;
import managers.AudioManager;
import screens.OverWorldScreen;

public class Objeto extends Element {
	private OverWorldScreen nivel;
	private Texto interaccion;
	private int siguienteInteraccion = 0;
	private Element dialogBox;
	private String dialogo1;
	private String sprite1;
	private Image bocadillo;
	private int mision;
	private float elapsedTime = 0;
	
	
	public Objeto(float x, float y, Stage s, OverWorldScreen nivel, String sprite1, String dialogo1, int mision) {
		super(x, y, s);
		this.nivel = nivel;
		this.dialogo1 = dialogo1;
		this.sprite1 = sprite1;
		this.mision = mision;
		
		loadFullAnimation(this.sprite1, 1, 1, 0.1f,false);
		
		dialogBox=new Element(0,0,s,this.getWidth(),this.getHeight());
		dialogBox.setPosition(this.getX(),this.getY());
		dialogBox.setRectangle();
	}

	public void act(float delta) {
	    super.act(delta);
	    float distanciaX = Math.abs(nivel.prota.getX() - getX());
	    float distanciaY = Math.abs(nivel.prota.getY() - getY());

	    bocadillo(distanciaX, distanciaY);
	    
	    if(bocadillo!=null) {
	        if (elapsedTime  < 1) {
	            bocadillo.setY(bocadillo.getY() + 3 * delta);
	        } else if (elapsedTime < 3) {
	            bocadillo.setY(bocadillo.getY() - 3 * delta);
	        }

	        if (elapsedTime > 2) {
	            elapsedTime = 0;
	        } else {
	            elapsedTime += delta;
	        }
	    }
	    
	    if(siguienteInteraccion==0) {
		    if (Gdx.input.justTouched()) {
		        Vector2 clickCoords = nivel.mainStage.screenToStageCoordinates(new Vector2(Gdx.input.getX(), Gdx.input.getY()));
		        if (distanciaX < 60 && distanciaY < 60 && dialogBox.getBoundaryPolygon().contains(clickCoords.x, clickCoords.y)) {
		            interactuar();
		        }
		    }
	    }
	    else {
	    	if (Gdx.input.justTouched()) {
		    		if(interaccion.completo==true) {
			    		interactuar();
		    		}
		    		else {
		    			interaccion.completo=true;
	    	            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
		    		}
	    		}
	    }
	}
	
	private void bocadillo(float distanciaX, float distanciaY) {
		if (distanciaX < 60 && distanciaY < 60 &&
		        ((nivel.prota.getX() < getX() && nivel.prota.getY() < getY()) ||
		         (nivel.prota.getX() >= getX() && nivel.prota.getY() < getY()) ||
		         (nivel.prota.getX() < getX() && nivel.prota.getY() >= getY()) ||
		         (nivel.prota.getX() >= getX() && nivel.prota.getY() >= getY()))) {
		    // el personaje está cerca y en la dirección correcta, creamos y agregamos el actor bocadillo
		    if (bocadillo == null) {
		    	bocadillo = new Image(new Texture("02-OW/Personajes/bocadillo_objeto_ow.png"));
		    	
		        bocadillo.setPosition(getX()+7, getY()-10 + getHeight() + 10); // ajustar la posición del bocadillo
		        bocadillo.setName("bocadillo");
		        nivel.mainStage.addActor(bocadillo);
		    }
		} else {
		    // el personaje se alejó o no está en la dirección correcta, eliminamos el actor bocadillo
		    if (bocadillo != null) {
		        bocadillo.remove();
		        bocadillo = null;
		    }
		}
	}

	private void interactuar() {
	    Parametros.controlesActivos = false; // se desactivan los controles del personaje
		
	    switch(this.mision) {
	    	case 0:
		    	switch (siguienteInteraccion) {
		        case 0:
		            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
		            interaccion = new Texto(this.dialogo1, "talk2");
		            this.nivel.uiStage.addActor(interaccion);
		            siguienteInteraccion++;
		            break;
		        case 1:
		            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
		            interaccion.hide();
    	            AudioManager.playSound("02-OW/Audio/sounds/item.wav");
		            Parametros.mision_un_extrano_muneco_completada = false;
		            Parametros.mision_un_extrano_muneco_item = false;
		            Parametros.controlesActivos = true; // se activan los controles del personaje
		            siguienteInteraccion = 0; // se reinicia el contador después de la última interacción
		            bocadillo.remove();
		            this.remove();
		            break;
			    }
		    	break;
	    	case 1:
		    	switch (siguienteInteraccion) {
		        case 0:
		            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
		            interaccion = new Texto(this.dialogo1, "talk2");
		            this.nivel.uiStage.addActor(interaccion);
		            siguienteInteraccion++;
		            break;
		        case 1:
		            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
		            interaccion.hide();
    	            AudioManager.playSound("02-OW/Audio/sounds/comprar.wav");
    	            Parametros.dinero+=2;
		            Parametros.mision_el_tesoro_perdido_completada = false;
		            Parametros.mision_el_tesoro_perdido_item = false;
		            Parametros.controlesActivos = true; // se activan los controles del personaje
		            siguienteInteraccion = 0; // se reinicia el contador después de la última interacción
		            bocadillo.remove();
		            this.remove();
		            break;
			    }
		    	break;
	    }
	}
}