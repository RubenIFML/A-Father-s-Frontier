package ow_elements;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.actions.Actions;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;

public class NombreZona extends Actor {
    private Label label;
    private float fadeInTime;
    private float waitTime;
    private float fadeOutTime;

    public NombreZona(String text, float fadeInTime, float waitTime, float fadeOutTime) {
        this.fadeInTime = fadeInTime;
        this.waitTime = waitTime;
        this.fadeOutTime = fadeOutTime;

        // Cargar la fuente con FreeTypeFontGenerator
        FreeTypeFontGenerator generator = new FreeTypeFontGenerator(Gdx.files.internal("Peepo.ttf"));
        FreeTypeFontGenerator.FreeTypeFontParameter parameter = new FreeTypeFontGenerator.FreeTypeFontParameter();
        parameter.size = 32;
        BitmapFont font = generator.generateFont(parameter);
        generator.dispose();

        // Crear el label
        label = new Label(text, new Label.LabelStyle(font, Color.WHITE));
        label.setFontScale(2.5f);
        label.setPosition(getX(), getY());

        // Añadir acciones de fade in y fade out
        label.addAction(Actions.alpha(0f));
        label.addAction(Actions.fadeIn(this.fadeInTime));
        label.addAction(Actions.delay(this.waitTime));
        label.addAction(Actions.fadeOut(this.fadeOutTime));
    }

    public void draw(SpriteBatch batch, float parentAlpha) {
        super.draw(batch, parentAlpha);
        label.draw(batch, parentAlpha);
    }

    @Override
    public void act(float delta) {
        super.act(delta);
        label.act(delta);
    }
}