package game;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.backends.lwjgl.LwjglApplication;
import com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.utils.viewport.FitViewport;
import com.badlogic.gdx.utils.viewport.Viewport;

public class Launcher {

	public static void main(String[] args) {
	    LwjglApplicationConfiguration config = new LwjglApplicationConfiguration();
	    config.resizable = false;
	    config.title = "A Father's Frontier";

	    Game myGame = new Demo();
	    LwjglApplication launcher = new LwjglApplication(myGame, config);
	    Screen myScreen = new MyScreen();
	    ((Demo) myGame).setScreen(myScreen);
	}

    private static class MyScreen implements Screen {
        private ViewportWithBorder viewport;

        @Override
        public void show() {
            OrthographicCamera camera = new OrthographicCamera();
            viewport = new ViewportWithBorder(Parametros.getAnchoPantalla(), Parametros.getAltoPantalla(), camera);
        }

        @Override
        public void render(float delta) {
            Gdx.gl.glClearColor(0, 0, 0, 1);
            Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);

            viewport.apply();
            // Aquí va tu código de renderizado del juego
        }

        @Override
        public void resize(int width, int height) {
            viewport.update(width, height);
        }

        @Override
        public void pause() {}

        @Override
        public void resume() {}

        @Override
        public void hide() {}

        @Override
        public void dispose() {}
    }

    private static class ViewportWithBorder extends FitViewport {
        public ViewportWithBorder(float worldWidth, float worldHeight, OrthographicCamera camera) {
            super(worldWidth, worldHeight, camera);

            float screenRatio = (float) Gdx.graphics.getWidth() / (float) Gdx.graphics.getHeight();
            float worldRatio = worldWidth / worldHeight;

            if (screenRatio > worldRatio) {
                // La pantalla es más ancha que el área de juego
                float scaledHeight = worldWidth / screenRatio;
                float border = (worldHeight - scaledHeight) / 2f;
                setScreenBounds(0, (int) border, (int) worldWidth, (int) scaledHeight);
            } else {
                // La pantalla es más alta que el área de juego
                float scaledWidth = worldHeight * screenRatio;
                float border = (worldWidth - scaledWidth) / 2f;
                setScreenBounds((int) border, 0, (int) scaledWidth, (int) worldHeight);
            }
        }
    }
}