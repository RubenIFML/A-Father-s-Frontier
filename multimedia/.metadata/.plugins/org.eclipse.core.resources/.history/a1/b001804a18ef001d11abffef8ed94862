package ow_elements;

import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Stage;

import screens.OverWorldScreen;

public class NpcMovil extends Element {
    private float velocidad;
    private int direccionMovimiento;
    private OverWorldScreen nivel;
    private int direccion;
    private boolean detenido;

    public NpcMovil(float x, float y, Stage s, OverWorldScreen nivel, String animacion, int direccion, float velocidad) {
        super(x, y, s);

        this.velocidad = velocidad;
        this.direccion = direccion;
        this.nivel = nivel;
        prepararAnimacion(animacion, true);
        this.setPolygon(8, 32, 23, 5, 5);

        if (direccion == 1) {
            direccionMovimiento = -1;
        } else if (direccion == 2) {
            direccionMovimiento = 1;
        }
    }

    public void act(float delta) {
        super.act(delta);
        if (!detenido) {
            if (direccion == 1) {
                moveBy(direccionMovimiento * this.velocidad * delta, 0);
            } else if (direccion == 2) {
                moveBy(0, direccionMovimiento * this.velocidad * delta);
            }
            comprobarColisiones();
            animaciones();
        } else {
            animacionDetenido();
            if (!this.overlaps(nivel.prota)) {
                detenido = false;
                animaciones();
            }
        }
    }

    private void comprobarColisiones() {
        for (Solid solido : this.nivel.solidos) {
            if (this.overlaps(solido)) {
                if (direccion == 1 && this.getRight() > solido.getX() && this.getX() < solido.getRight()) {
                    direccionMovimiento = 0;
                    detenido = true;
                    break;
                } else if (direccion == 2 && this.getTop() > solido.getY() && this.getY() < solido.getTop()) {
                    direccionMovimiento = 0;
                    detenido = true;
                    break;
                } else {
                    if (direccion == 1) {
                        this.direccionMovimiento *= -1;
                    } else if (direccion == 2) {
                        this.direccionMovimiento *= -1;
                    }
                }
            }
        }
        if (this.nivel.prota.overlaps(this)) {
            this.nivel.prota.preventOverlap(this);
        }
    }

    private void animaciones() {
        if (direccionMovimiento > 0) {
            if (direccion == 1) {
                this.setAnimation(this.derecha);
            } else if (direccion == 2) {
                this.setAnimation(this.espalda);
            }
        } else if (direccionMovimiento < 0) {
            if (direccion == 1) {
                this.setAnimation(this.izquierda);
            } else if (direccion == 2) {
                this.setAnimation(this.frente);
            }
        }
    }

    public void reanudarMovimiento() {
        detenido = false;
        direccionMovimiento = (direccionMovimiento != 0) ? direccionMovimiento : ((direccion == 1) ? -1 : 1);
        setAnimation(animacionAnterior);
    }
}