package screens;

import com.badlogic.gdx.Game;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.ScreenAdapter;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.actions.Actions;
import com.badlogic.gdx.scenes.scene2d.ui.Image;
import com.badlogic.gdx.utils.viewport.FitViewport;

import game.Parametros;
import managers.ResourceManager;

public class EndScreen extends BScreen {
    private Stage uiStage;
    private Image periodicoFinalActor;
    private Image finalisimoActor;

    public EndScreen(Demo game) {

        super(game);
        
        uiStage = new Stage(new FitViewport(Parametros.getAnchoPantalla(), Parametros.getAltoPantalla()));
        Gdx.input.setInputProcessor(uiStage);

        // Cargar las texturas
        Texture periodicoFinalTextura = ResourceManager.getTexture("Menu/periodico.0_1.png");
        Texture finalisimoTextura = ResourceManager.getTexture("Menu/final.png");

        // Crear el actor del periodicoFinal
        periodicoFinalActor = new Image(periodicoFinalTextura);
        periodicoFinalActor.setSize(Parametros.getAnchoPantalla(), Parametros.getAltoPantalla());
        periodicoFinalActor.getColor().a = 0f; // Establecer la transparencia inicial a 0
        periodicoFinalActor.addAction(Actions.sequence(
                Actions.fadeIn(1f), // Hacer fade in
                Actions.run(() -> Gdx.input.setInputProcessor(this.uiStage)) // Establecer el input processor al uiStage
        ));

        // Crear el actor del finalisimo
        finalisimoActor = new Image(finalisimoTextura);
        finalisimoActor.setSize(Parametros.getAnchoPantalla(), Parametros.getAltoPantalla());
        finalisimoActor.getColor().a = 0f; // Establecer la transparencia inicial a 0

        uiStage.addActor(periodicoFinalActor); // Añadir el actor periodicoFinal al uiStage
    }

    @Override
    public void render(float delta) {
        // Actualizar la lógica del stage
        uiStage.act(delta);

        // Dibujar el stage
        uiStage.draw();

        // Detectar clic del mouse
        if (Gdx.input.justTouched()) {
            // Obtener la transparencia actual del periodicoFinalActor
            float alpha = periodicoFinalActor.getColor().a;

            // Realizar fade out del periodicoFinalActor
            periodicoFinalActor.addAction(Actions.sequence(
                    Actions.fadeOut(1f), // Hacer fade out
                    Actions.delay(3f), // Delay de 3 segundos
                    Actions.run(() -> {
                        uiStage.clear(); // Limpiar el uiStage
                        uiStage.addActor(finalisimoActor); // Añadir el actor finalisimo al uiStage
                        finalisimoActor.addAction(Actions.fadeIn(1f)); // Hacer fade in del finalisimoActor
                        Gdx.input.setInputProcessor(uiStage); // Establecer el input processor al uiStage
                    })
            ));
        }
    }

    @Override
    public void dispose() {
        uiStage.dispose();
    }
}