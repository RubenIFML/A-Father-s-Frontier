package fs_elements;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Batch;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.Touchable;

import game.Parametros;
import managers.AudioManager;

public class Boton extends Actor {
    private Texture boton;
    private float x;
    private String textura1;
    private String textura2;
    
    public Boton(float x, String textura1, String textura2) {
        this.x = x;
        this.textura1 = textura1;
        this.textura2 = textura2;
        setBounds(this.x, 10, 32, 35);
        boton = new Texture("01-FS/Objetos/" + this.textura1);
    }

    @Override
    public void act(float delta) {
        if (x == 165) {
            if ((Gdx.input.isKeyJustPressed(Input.Keys.DEL) || mouseOver) && Parametros.controlesActivos) {
                boton = new Texture("01-FS/Objetos/" + this.textura2);
                AudioManager.playSound("01-FS/Audio/sounds/boton.wav");
            } else {
                boton = new Texture("01-FS/Objetos/" + this.textura1);
            }
        } else if (x == 200) {
            if ((Gdx.input.isKeyJustPressed(Input.Keys.ENTER) || mouseOver) && Parametros.controlesActivos) {
                boton = new Texture("01-FS/Objetos/" + this.textura2);
                AudioManager.playSound("01-FS/Audio/sounds/boton.wav");
            } else {
                boton = new Texture("01-FS/Objetos/" + this.textura1);
            }
        }
    }

    @Override
    public void draw(Batch batch, float parentAlpha) {
        batch.draw(boton, getX(), getY(), getWidth(), getHeight());
    }

    public Rectangle getBoundingRectangle() {
        return new Rectangle(getX(), getY(), getWidth(), getHeight());
    }

    @Override
    public Actor hit(float x, float y, boolean touchable) {
        if (touchable && getTouchable() != Touchable.enabled) {
            return null;
        }
        return x > 0 && x < getWidth() && y > 0 && y < getHeight() ? this : null;
    }

    public boolean mouseMoved(float x, float y) {
        boolean result = super.mouseMoved(x, y);
        if (hit(x, y, true) != null) {
            mouseOver = true;
        } else {
            mouseOver = false;
        }
        return result;
    }

    @Override
    public boolean touchDown(float x, float y, int pointer, int button) {
        boolean result = super.touchDown(x, y, pointer, button);
        if (hit(x, y, true) != null) {
            mouseOver = true;
        } else {
            mouseOver = false;
        }
        return result;
    }

    public void touchUp(float x, float y, int pointer, int button) {
        super.touchUp(x, y, pointer, button);
        if (hit(x, y, true) != null) {
            mouseOver = true;
        } else {
            mouseOver = false;
        }
    }

    public void touchDragged(float x, float y, int pointer) {
        super.touchDragged(x, y, pointer);
        if (hit(x, y, true) != null) {
            mouseOver = true;
        } else {
            mouseOver = false;
        }
    }
}

