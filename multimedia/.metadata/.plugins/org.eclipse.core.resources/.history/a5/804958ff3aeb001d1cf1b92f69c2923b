package ow_elements;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Batch;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;
import com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle;

import game.Parametros;
import managers.AudioManager;

public class Texto extends Actor {
    private Texture caja;
    private String text;
    private Label texto;
    public LabelStyle uiStyle;
    public Sound letra;
    float x = getX(); // Ajustar la posición de la caja
    float y = getY();
    float width = Parametros.getAnchoPantalla(); // Ajustar el tamaño de la caja
    float height = Parametros.getAltoPantalla();
    private float temporizador=0;
    private int contador=0;
    private char letraActual;
    boolean completo = false;

    public Texto(String text) {
        FreeTypeFontGenerator ftfg= new FreeTypeFontGenerator(Gdx.files.internal("Peepo.ttf"));
        FreeTypeFontParameter ftfp= new FreeTypeFontParameter();
        
        letra = ("01-FS/Audio/sounds/menuBoton.wav");
        BitmapFont fuentePropia=ftfg.generateFont(ftfp);
        uiStyle=new LabelStyle();
        fuentePropia.getData().setScale(2f);
        uiStyle.font=fuentePropia;

        this.text=text;

        caja = new Texture(Gdx.files.internal("Menu/dialogoOW.png"));

        texto=new Label("", uiStyle);
        texto.setPosition(30, 92);
    }

    @Override
    public void act(float delta) {
        if (!completo) {
            temporizador += Gdx.graphics.getDeltaTime();
            if(temporizador > 0.01f && contador < text.length()) {
                letraActual = text.charAt(contador);
                texto.setText(text.substring(0, contador+1));
                
                switch(letraActual) {
                	case ' ':
                		break;
                	case '.':
                		break;
                	case ',':
                		break;
                	default:
	    	            AudioManager.playSound("01-FS/Audio/sounds/menuBoton.wav");
                		break;
                }
                
                contador++;
                temporizador = 0;
            } else if (contador == text.length()) {
                completo = true;
            }
        }
        else if (completo) {
        	texto.remove();
            texto=new Label(text, uiStyle);
            texto.setPosition(30, 48);
        }
    }

    @Override
    public void draw(Batch batch, float parentAlpha) {
        batch.draw(caja, x, y, width, height);
        texto.draw(batch, parentAlpha);
    }

    public void hide() {
        this.remove();
    }
}